INTRODUCTION
***************

Dycapo Server [a.k.a. DyCaPo - DYnamic CArPOoling] is a free software system 
developed in the SoNET unit of the 
Fondazione Bruno Kessler <http://sonet.fbk.eu>. 
It is currently a solo project started by Daniel Graziotin 
for his BSC thesis at the Free University of Bolzano/Bozen <http://www.unibz.it>.

Dycapo Server is a software built using evolutionary prototyping to demonstrate 
and support our contributions to OpenTrip <http://www.opentrip.info> 
and therefore the definition  of a standard protocol for (Dynamic) Ridesharing. 

It will first provide full functionalities for dynamic ridesharing using an XML-RPC 
based protocol. Then we will fully support and extend OpenTrip Dynamic with a 
RESTful webservice.

See http://dycapo.org for more information about the project.

More information about this software: http://dycapo.org/Server
Dycapo is hosted on Github: http://github.com/BodomLx/dycapo

STATUS
***************
We are currently releasing working prototypes for building our APIs and Protocol.
We adopted SemVer - Semantic Versioning [http://semver.org]
for our release numbering system.
Therefore, v1.0.0 will be considered stable, with fixed API. 

PROTOCOL
***************
Dycapo defines a new Protocol for Dynamic Carpooling, heavily inspired on
<http://opentrip.info/wiki/Home> Protocol.
The Protocol, called Dycapo Protocol, is currently based on XML-RPC calls.
See http://dycapo.org/Protocol for more information

API
***************
APIs are located at http://dycapo.org/Dycapo-API.html

TESTING
***************
We provide 8 registered users to test Dycapo functionalities:
- admin 
- driver1
- rider1
- rob
- dio
- ozzy
- angela

All of them with password set to "password".

We provide a testing framework, located under tests/.
We are using py.test <http://codespeak.net/py/dist/test/>.
To run all tests, simply run run_tests.py

If you want to align all the objects created by XML-RPC tests,
please use manage.py restifymodels

ACKNOWLEDGEMENT
***************
Thanks to the whole the SoNet group that supported me with hints and fun during
my internship
A big Thank You! To my colleague Riccardo Buttarelli that is writing an Android
Client for Dycapo and also reporting bugs and suggestions for the Protocol
Many thanks to David Fischer, author of RPC4DJANGO, that developed it while I was
developing Dycapo and has always been willing to give hints and add functionalities
by also following my deadlines.
Thank you Dan Kirshner for your dynamicridesharing.org project and all the force
you put in something in which you believe!
