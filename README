INTRODUCTION
***************
Dycapo Server (also known as DycapoS) is a software built using evolutionary prototyping to
demonstrate and support contributions to Dynamic Carpooling research.
It provides a basic set of functionalities for dynamic ridesharing using a REST-based protocol.
It implements our proposed standard for Dynamic Carpooling communication, Dycapo Protocol.

It is currently a solo project started by Daniel Graziotin 
for his BSc thesis at the Free University of Bolzano/Bozen <http://www.unibz.it>.


See http://dycapo.org for more information about the project.

More information about this software: http://dycapo.org/Server
Dycapo is hosted on Github: http://github.com/BodomLx/dycapo

STATUS
***************
Dycapo is reaching a mature state. A basic set of Dynamic Carpooling functionalities has been implemented.
We are waiting for some clients to provide a wider set of empirical tests.

We adopted SemVer - Semantic Versioning [http://semver.org]
for our release numbering system.
Therefore, v1.0.0 will be considered stable, with fixed API. 

PROTOCOL
***************
DycapoS implements a new REST-ful Protocol, called Dycapo Protocol.
See http://dycapo.org/Protocol for more information


API
***************
The APIs are the application-level protocol itself.

TESTING
***************
We provide 8 registered users to test DycapoS functionalities:
- admin 
- driver1
- rider1
- rob
- dio
- ozzy
- angela

All of them with password set to "password".

We provide a testing framework, located under tests/.
We are using py.test <http://codespeak.net/py/dist/test/>.
To run all tests, simply run run_tests.py

MORE
***************

Visit the official website at http://dycapo.org for more information.
The docs/ folder contains the Bachelor thesis of the author of Dycapo that
briefly explains the whole project, as well as the Server structure.

ACKNOWLEDGEMENT
***************
Thanks to the whole the SoNet group that supported me with hints and fun during
my internship
A big Thank You! To my colleague Riccardo Buttarelli that is writing an Android
Client for Dycapo and also reporting bugs and suggestions for the Protocol
Many thanks to David Fischer, author of RPC4DJANGO, that developed it while I was
developing Dycapo and has always been willing to give hints and add functionalities
by also following my deadlines.
Thank you Dan Kirshner for your dynamicridesharing.org project and all the force
you put in something in which you believe!
